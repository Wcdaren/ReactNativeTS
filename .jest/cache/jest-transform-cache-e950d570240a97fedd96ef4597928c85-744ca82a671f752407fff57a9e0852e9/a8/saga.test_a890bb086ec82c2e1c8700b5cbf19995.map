{"version":3,"sources":["saga.test.ts"],"names":[],"mappings":";;;;;;AAAA,OAAA,CAAA,MAAA,CAAA;;AAGA,MAAA,OAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AAGA,QAAQ,CAAC,mBAAD,EAAsB,MAAK;AAC/B,MAAI,qBAAJ;AAEA,EAAA,UAAU,CAAE,MAAK;AACb,IAAA,qBAAqB,GAAG,OAAA,CAAA,YAAA,CAAa;AAAE,MAAA,IAAI,EAAE,CAAR;AAAW,MAAA,GAAG,EAAE,KAAhB;AAAuB,MAAA,KAAK,EAAE,EAA9B;AAAkC,MAAA,QAAQ,EAAE;AAA5C,KAAb,CAAxB;AAEA,UAAM,gBAAgB,GAAG,qBAAqB,CAAC,IAAtB,GAA6B,KAAtD;AACA,IAAA,OAAO,CAAC,GAAR,CAAY,sCAAZ;AACA,IAAA,OAAO,CAAC,GAAR,CAAY,gBAAZ;AACA,IAAA,OAAO,CAAC,GAAR,CAAY,sCAAZ;AACA,IAAA,MAAM,CAAC,gBAAD,CAAN,CAAyB,eAAzB;AAIH,GAXS,CAAV;AAYH,CAfO,CAAR","sourcesContent":["import 'jest'\nimport { testSaga } from 'redux-saga-test-plan'\nimport { put, takeLatest } from 'redux-saga/effects';\nimport { getTopicList } from '../Sagas';\n\n\ndescribe('getTopicList Saga', () => {\n    let getTopicListGenerator;\n\n    beforeEach((() => {\n        getTopicListGenerator = getTopicList({ page: 1, tab: 'all', limit: 20, mdrender: 'true' });\n\n        const selectDescriptor = getTopicListGenerator.next().value;\n        console.log('====================================')\n        console.log(selectDescriptor)\n        console.log('====================================')\n        expect(selectDescriptor).toMatchSnapshot();\n\n        // const callDescriptor = getTopicListGenerator.next().value;\n        // expect(callDescriptor).toMatchSnapshot();\n    }))\n})"],"sourceRoot":""}