{"version":3,"sources":["saga.test.ts"],"names":[],"mappings":";;;;;;AAAA,MAAA,SAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AACA,OAAA,CAAA,MAAA,CAAA;;AAEA,MAAA,SAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AACA,MAAA,OAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AAGA,QAAQ,CAAC,mBAAD,EAAsB,MAAK;AAC/B,MAAI,qBAAJ;AAEA,EAAA,UAAU,CAAE,MAAK;AACb,IAAA,qBAAqB,GAAG,OAAA,CAAA,YAAA,CAAa;AAAE,MAAA,IAAI,EAAE,CAAR;AAAW,MAAA,GAAG,EAAE,KAAhB;AAAuB,MAAA,KAAK,EAAE,EAA9B;AAAkC,MAAA,QAAQ,EAAE;AAA5C,KAAb,CAAxB;AACR,IAAA,OAAO,CAAC,GAAR,CAAY,GAAZ;AACQ,UAAM,gBAAgB,GAAG,qBAAqB,CAAC,IAAtB,GAA6B,KAAtD;AACA,IAAA,OAAO,CAAC,GAAR,CAAY,sCAAZ;AACA,IAAA,OAAO,CAAC,GAAR,CAAY,gBAAZ;AACA,IAAA,OAAO,CAAC,GAAR,CAAY,sCAAZ;AACA,IAAA,MAAM,CAAC,gBAAD,CAAN,CAAyB,eAAzB;AAIH,GAXS,CAAV;AAaA,EAAA,EAAE,CAAC,6EAAD,EAAgF,MAAK;AACnF,UAAM,QAAQ,GAAY,EAA1B;AACA,UAAM,aAAa,GAAG,qBAAqB,CAAC,IAAtB,CAA2B,QAA3B,EAAqC,KAA3D;AACA,IAAA,MAAM,CAAC,aAAD,CAAN,CAAsB,OAAtB,CAA8B,SAAA,CAAA,GAAA,CAAI,SAAA,CAAA,mBAAA,CAAoB,QAApB,CAAJ,CAA9B;AACD,GAJD,CAAF;AAKH,CArBO,CAAR","sourcesContent":["import { topicRequestSuccess } from './../Actions';\nimport 'jest'\nimport { testSaga } from 'redux-saga-test-plan'\nimport { put, takeLatest } from 'redux-saga/effects';\nimport { getTopicList } from '../Sagas';\n\n\ndescribe('getTopicList Saga', () => {\n    let getTopicListGenerator: any;\n\n    beforeEach((() => {\n        getTopicListGenerator = getTopicList({ page: 1, tab: 'all', limit: 20, mdrender: 'true' });\nconsole.log('1');\n        const selectDescriptor = getTopicListGenerator.next().value;\n        console.log('====================================')\n        console.log(selectDescriptor)\n        console.log('====================================')\n        expect(selectDescriptor).toMatchSnapshot();\n\n        // const callDescriptor = getTopicListGenerator.next().value;\n        // expect(callDescriptor).toMatchSnapshot();\n    }))\n\n    it('should dispatch the reposLoaded action if it requests the data successfully', () => {\n        const response: never[] = [];\n        const putDescriptor = getTopicListGenerator.next(response).value;\n        expect(putDescriptor).toEqual(put(topicRequestSuccess(response)));\n      });\n})"],"sourceRoot":""}