{"version":3,"sources":["HomeService.ts"],"names":[],"mappings":";;;;;;AACA,MAAA,KAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AACA,MAAA,UAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AAMA,MAAM,OAAO,GAAG,CAAC,GAAG,GAAG,KAAA,CAAA,OAAP,KAA4B;AAC1C,QAAM,GAAG,GAAG,UAAA,CAAA,MAAA,CAAO;AACjB,IAAA,OAAO,EAAE,GADQ;AAEjB,IAAA,OAAO,EAAE;AACP,uBAAiB;AADV,KAFQ;AAKjB,IAAA,OAAO,EAAE;AALQ,GAAP,CAAZ;;AAQA,QAAM,gBAAgB,GAAI,MAAD,IAA0B;AACjD,WAAO,GAAG,CAAC,GAAJ,CAA0B,QAA1B,EAAoC,MAApC,CAAP;AACD,GAFD;;AAIA,SAAO;AAAE,IAAA;AAAF,GAAP;AACD,CAdD;;AAgBA,OAAA,CAAA,OAAA,GAAe,OAAf","sourcesContent":["import { TopicResposeData, RequestParams } from '../Containers/HomeScreen/Actions'\nimport { baseURL } from '../Configs/url'\nimport { ApiResponse, create } from 'apisauce'\n\nexport interface TopicApi {\n  getTopicsRequest: (params: RequestParams) => Promise<ApiResponse<TopicResposeData>>\n}\n\nconst HomeApi = (url = baseURL): TopicApi => {\n  const api = create({\n    baseURL: url,\n    headers: {\n      'Cache-Control': 'no-cache',\n    },\n    timeout: 10000,\n  })\n\n  const getTopicsRequest = (params: RequestParams) => {\n    return api.get<TopicResposeData>('topics', params)\n  }\n\n  return { getTopicsRequest }\n}\n\nexport default HomeApi\n"],"sourceRoot":""}